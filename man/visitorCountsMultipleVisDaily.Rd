% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visitorCountsVisMultipleInstitutes.R
\name{visitorCountsMultipleVisDaily}
\alias{visitorCountsMultipleVisDaily}
\title{Visualize Daily Visitor Counts of Multiple Institutes}
\usage{
visitorCountsMultipleVisDaily(visitorCountMultiple)
}
\arguments{
\item{visitorCountMultiple}{A numeric vector or a tibble, with
number of rows equaling to length of days and columns equaling
to 1 + number of institutes, such that the dimension is: days x (1
+ number of institutes). Here, days is the number of days for
which visitor counts are present. First column must contain the
dates and should contain column name "dates". Dates must be in
the format of date-month-year. The second column and nex columns,
must contain the visitor count for the given date for respective
institute. User may choose customize column name. See example.}
}
\value{
Returns three plots summarizing daily visitor counts by
   week, month and day.
\itemize{
  \item dailyOuput - A bar plot of daily visitor count values
        by month.
  \item dailyOuputLine - A line plot of daily visitor count values
        by month.
  \item dailyOuputStackedLog - A bar plot of log-transformed daily
  visitor count values by month.
  \item dailyOuputLineLog - A line plot of log-transformed daily
  visitor count values by month.
  \item dailyHeatmap - A heatmap of log-transformed daily
  visitor count values
}
}
\description{
A function that permit to create plots showing daily visitor counts
for multiple institutes. Plots include line plots and barplots.
Plots with log-transformed counts are also provided
to better visualize trends with outliers.
}
\examples{
set.seed(1234)
# Example 1: Unidirectional gates with daily counts
# Simulate gate count data using Poisson distribution
randomCounts1 <- c(sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100)),
                  sort(rpois(n = 50, lambda = 10)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 200)))

# Create a tibble with date information
randomCounts1tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts1)] \%>\%
                        format('\%d-\%m-\%Y'),
                        institute1 = randomCounts1)

set.seed(2345)
randomCounts2 <- c(sort(rpois(n = 50, lambda = 10)),
                  sort(rpois(n = 50, lambda = 5000)),
                  sort(rpois(n = 82, lambda = 500)),
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 3000)),
                  sort(rpois(n = 50, lambda = 1000)))

# Create a tibble with date information
randomCounts2tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts2)] \%>\%
                        format('\%d-\%m-\%Y'),
                        institute2 = randomCounts2)

set.seed(3456)
randomCounts3 <- c(sort(rpois(n = 50, lambda = 20000)),
                  sort(rpois(n = 50, lambda = 5000)),
                  sort(rpois(n = 82, lambda = 500)),
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 3000)),
                  sort(rpois(n = 50, lambda = 1000)))

# Create a tibble with date information
randomCounts3tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts3)] \%>\%
                        format('\%d-\%m-\%Y'),
                        institute3 = randomCounts3)

# Combine data
multipleTibble <- randomCounts1tibble \%>\%
  dplyr::left_join(randomCounts2tibble) \%>\%
  dplyr::left_join(randomCounts3tibble)

# Check max value for gate counter maximum
max(multipleTibble$institute1, na.rm = TRUE) # 1107
max(multipleTibble$institute2, na.rm = TRUE) # 5141
max(multipleTibble$institute3, na.rm = TRUE) # 20357

# colnames
colnames(multipleTibble)
# "dates" "institute1" "institute2" "institute3"

# Visualize counts for multiple institutes
visPutEx1 <-
   visitorCountsMultipleVisDaily(
   visitorCountMultiple = multipleTibble)


}
\author{
Anjali Silva, \email{anjali@alumni.uoguelph.ca}
}
