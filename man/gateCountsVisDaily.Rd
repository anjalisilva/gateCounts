% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gateCountsVisDaily.R
\name{gateCountsVisDaily}
\alias{gateCountsVisDaily}
\title{Visualize Daily Visitor Counts}
\usage{
gateCountsVisDaily(dailyVisitorCount)
}
\arguments{
\item{dailyVisitorCount}{A numeric vector or a tibble, with
number of rows equaling to length of days and columns equaling
to two, such that the dimension is: days x 2. Here
days is the number of days for which visitor counts are present.
First column must contain the dates and should contain column name
"dates". Dates must be in the format of date-month-year. The second
column must contain the visitor count for the given date and
should be called "counts". This input could be obtained from
running gateCounts::gateCountsToVisitorCounts() or
gateCounts::visitorCountSummary() functions.}
}
\value{
Returns three plots summarizing daily visitor counts by
   week, month and day. Another three plots are produced with
   log-transformed counts to better visualize trends.
\itemize{
  \item dailyOuput - A bar plot of daily visitor count values
        by month.
  \item dailyOuputLine - A line plot of daily visitor count values
        by month.
  \item dailyOuputLine2 - A line plot of daily visitor count values
        by month, laid over in one view.
  \item dailyOuputLog - A bar plot of daily visitor count values
        by month.
  \item dailyOuputStackedLog - A bar plot of log-transformed daily
  visitor count values by month.
  \item dailyOuputLineLog - A line plot of log-transformed daily
  visitor count values by month.
  \item dailyOuputLine2Log - A line plot of log-transformed daily
  visitor count values by month, laid over in one view.
  \item dailyHeatmap - A heatmap of log-transformed daily
  visitor count values
}
}
\description{
A function that permit to create plots showing daily visitor counts.
Plots include line plots and barplots of month vs daily
counts. Plots with log-transformed counts are also provided
to better visualize trends with outliers.
}
\examples{
set.seed(1234)
# Example 1: Unidirectional gates with daily counts
randomCounts1 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                  200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

randomCounts1tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts1)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts1)

# check max value for gate counter maximum
max(randomCounts1tibble$counts, na.rm = TRUE) # 200000

randomCountsSumEx1 <- gateCountSummary(
             rawGateCounts = randomCounts1tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)
randomCountsSumEx1$dailyCounts # access daily adjusted counts

# Visualize counts from Example 1
visOne <- gateCountsVisDaily(
             outputDailyCounts = randomCountsSumEx1)

# Example 2: Unidirectional gates with random NA values
randomCounts2 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                       200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

# randomly introduce NA and "Gate broken" entries
randomPositions <- sample(x = c(1:length(randomCounts2)),
                         size = 8, replace = FALSE)
randomCounts2[randomPositions[1:4]] <- NA
randomCounts2[randomPositions[5:8]] <- "Gate broken"

randomCounts2tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts2)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts2)

# check max value for gate counter maximum
max(as.numeric(randomCounts2tibble$counts), na.rm = TRUE) # 200000

randomCountsSumEx2 <- gateCountSummary(
             rawGateCounts = randomCounts2tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)
randomCountsSumEx2$dailyCounts # access daily adjusted counts

# Visualize counts from Example 2
visTwo <- gateCountsVisDaily(
             outputDailyCounts = randomCountsSumEx2)

}
\references{
MÃ¼ller K, Wickham H (2022). _tibble: Simple Data Frames_. R
package version 3.1.8, \href{https://CRAN.R-project.org/package=tibble}{Link}.

Google. (2022, February 14). Cleaning up gate count statistics.
Google Groups. Retrieved September 26, 2022,
\href{https://groups.google.com/a/arl.org/g/arl-assess/c/JQyllZN4gaE}{Link}.
}
\author{
Anjali Silva, \email{anjali@alumni.uoguelph.ca}
}
