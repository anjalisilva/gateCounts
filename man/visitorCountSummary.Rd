% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gateCountsCalculation.R
\name{visitorCountSummary}
\alias{visitorCountSummary}
\title{Provide Visitor Count Summaries From Daily Visitor Counts}
\usage{
visitorCountSummary(dailyVisitorCount)
}
\arguments{
\item{dailyVisitorCount}{A numeric vector or a tibble, with
number of rows equaling to length of days and columns equaling
to two, such that the dimension is: days x 2. Here
days is the number of days for which visitor counts are present.
First column must contain the dates and should contain column name
"dates". Dates must be in the format of date-month-year. The second
column must contain the visitor count for the given date and
should be called "counts".}
}
\value{
Returns an S3 object of class visitorCountSummary with results.
\itemize{
  \item dailyVisitorCounts - Daily gate counts for the period.
  \item cumulativeVisitorCount - Sum of daily gate counts for the period,
        adjusted for issues mentioned under details.
  \item weeklyVisitorCounts - Weekly gate counts for the period,
        adjusted for issues mentioned under details.
  \item monthlyVisitorCounts - Monthly gate counts for the period, adjusted
        for issues mentioned under details.
  \item busiestMonth - Month with the highest visitor count.
  \item leastBusiestMonth - Month with the least visitor count.
  \item busiestWeek - Week with the highest visitor count.
  \item leastBusiestWeek - Week with the least visitor count.
  \item busiestDay - Day with the highest visitor count. There
        maybe multiple dates.
  \item leastBusiestDay - Day with the lowest visitor count. There
        maybe multiple dates.
  \item gateType - Gate type for which counts are provided by the user.
  \item gatecounterMaxValue - User provided value in the argument
        gatecounterMaxValue.
  \item dailyAverage - Average daily visitor count for the duration provided.
  \item dailyMedian - Median daily visitor count for the duration provided.
  \item weeklyAverage - Average weekly count for the duration provided.
  \item weeklyMedian - Median weekly count for the duration provided.
  \item monthlyAverage - Average monthly count for the duration provided.
  \item monthlyMedian - Median monthly count for the duration provided.

}
}
\description{
A function that calculates weekly, monthly visitor counts and
summary statistics like daily, weekly, monthly mean and median,
busiest and least busiest day, week, and month for the entire
duration for which visitor count data is provided by user.
Input should be a numeric vector or a tibble containing values
of daily visitor counts and date with a specific format
(see argument details or README file).
}
\examples{
library("magrittr")
library("lubridate")
library("tibble")
set.seed(1234)
# Example 1: Unidirectional gates with daily counts
# Simulate gate count data using Poisson distribution
randomCounts1 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                  200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

# Create a tibble with date information
randomCounts1tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts1)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts1)

# Check max value for gate counter maximum
max(randomCounts1tibble$counts, na.rm = TRUE) # 200000

# Run gateCountsToVisitorCounts function
randomCountsEx1 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts1tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)

# Check output and rename column for visitorCountSummary() function
visitorCountsEx1<- randomCountsEx1$dailyVisitorCounts \%>\%
  dplyr::rename("counts" = "visitorCount") \%>\%
  dplyr::select(dates, counts)

# Use visitor counts to get summaries
visitorCountsEx1Summary <-
    visitorCountSummary(dailyVisitorCount = visitorCountsEx1)

visitorCountsEx1Summary$dailyVisitorCounts # access daily counts
visitorCountsEx1Summary$weeklyVisitorCounts # access weekly counts
visitorCountsEx1Summary$monthlyVisitorCounts # access monthly  counts
visitorCountsEx1Summary$cumulativeVisitorCount # cumulative count for duration
visitorCountsEx1Summary$busiestMonth # busiest month
visitorCountsEx1Summary$leastBusiestMonth # least busiest month
visitorCountsEx1Summary$busiestWeek # busiest week
visitorCountsEx1Summary$leastBusiestWeek # least busiest week
visitorCountsEx1Summary$busiestDay # busiest day
visitorCountsEx1Summary$leastBusiestDay # least busiest day
visitorCountsEx1Summary$dailyAverage  # daily average for duration
visitorCountsEx1Summary$dailyMedian  # daily median for duration
visitorCountsEx1Summary$weeklyAverage # average based on weekly counts
visitorCountsEx1Summary$weeklyMedian # median based on weekly counts
visitorCountsEx1Summary$monthlyAverage # average based on monthly counts
visitorCountsEx1Summary$monthlyMedian # median based on monthly counts


# Example 2: Bidirectional gates with NA values
# Simulate gate count data using Poisson distribution
randomCounts4 <- c(sort(rpois(n = 50, lambda = 10000)),
                  sort(rpois(n = 50, lambda = 400000)),
                  sort(rpois(n = 82, lambda = 800000)),
                  999999, # max value
                  sort(rpois(n = 50, lambda = 10000)),
                  sort(rpois(n = 50, lambda = 450000)),
                  sort(rpois(n = 50, lambda = 850000)))

# Randomly introduce NA and "Gate broken" entries
randomPositions <- sample(x = c(1:length(randomCounts4)),
                         size = 8, replace = FALSE)
randomCounts4[randomPositions[1:4]] <- NA
randomCounts4[randomPositions[5:8]] <- "Gate broken"

# Create a tibble with date information
randomCounts4tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts4)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts4)

# Check max value for gate counter maximum
max(as.numeric(randomCounts4tibble$counts), na.rm = TRUE) # 999999

# Run gateCountsToVisitorCounts function
randomCountsEx4 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts4tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 999999,
             printMessages = FALSE)

# Check output and rename column for visitorCountSummary() function
visitorCountsEx4 <- randomCountsEx4$dailyVisitorCounts \%>\%
  dplyr::rename("counts" = "visitorCount") \%>\%
  dplyr::select(dates, counts)

# Use visitor counts to get summaries
visitorCountsEx4Summary <-
    visitorCountSummary(dailyVisitorCount = visitorCountsEx4)

visitorCountsEx4Summary$dailyVisitorCounts # access daily counts
visitorCountsEx4Summary$weeklyVisitorCounts # access weekly counts
visitorCountsEx4Summary$monthlyVisitorCounts # access monthly  counts
visitorCountsEx4Summary$cumulativeVisitorCount # cumulative count for duration
visitorCountsEx4Summary$busiestMonth # busiest month
visitorCountsEx4Summary$leastBusiestMonth # least busiest month
visitorCountsEx4Summary$busiestWeek # busiest week
visitorCountsEx4Summary$leastBusiestWeek # least busiest week
visitorCountsEx4Summary$busiestDay # busiest day
visitorCountsEx4Summary$leastBusiestDay # least busiest day
visitorCountsEx4Summary$dailyAverage  # daily average for duration
visitorCountsEx4Summary$dailyMedian  # daily median for duration
visitorCountsEx4Summary$weeklyAverage # average based on weekly counts
visitorCountsEx4Summary$weeklyMedian # median based on weekly counts
visitorCountsEx4Summary$monthlyAverage # average based on monthly counts
visitorCountsEx4Summary$monthlyMedian # median based on monthly counts

}
\author{
Anjali Silva, \email{anjali@alumni.uoguelph.ca}
}
