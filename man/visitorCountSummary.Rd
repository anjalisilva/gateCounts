% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gateCountsCalculation.R
\name{visitorCountSummary}
\alias{visitorCountSummary}
\title{Provide Visitor Count Summaries From Daily Visitor Counts}
\usage{
visitorCountSummary(dailyVisitorCount)
}
\arguments{
\item{dailyVisitorCount}{A numeric vector or a tibble, with
number of rows equaling to length of days and columns equaling
to two, such that the dimension is: days x 2. Here
days is the number of days for which visitor counts are present.
First column must contain the dates and should contain column name
"dates". Dates must be in the format of date-month-year. The second
column must contain the visitor count for the given date and
should be called "counts".}
}
\value{
Returns an S3 object of class gateCounts with results.
\itemize{
  \item dailyVisitorCounts - Daily gate counts for the period, adjusted
        for issues mentioned under details. If gateType was
        "Bidirectional", the visitor count is divided by
        two and ceiling() function from base R is applied.
  \item cumulativeVisitorCount - Sum of daily gate counts for the period,
        adjusted for issues mentioned under details. If gateType was
        "Bidirectional", the final resulting number would be divided
        by two.
  \item weeklyVisitorCounts - Weekly gate counts for the period,
        adjusted for issues mentioned under details.
  \item monthlyVisitorCounts - Monthly gate counts for the period, adjusted
        for issues mentioned under details.
  \item busiestMonth - Month with the highest visitor count.
  \item leastBusiestMonth - Month with the least visitor count.
  \item busiestWeek - Week with the highest visitor count.
  \item leastBusiestWeek - Week with the least visitor count.
  \item busiestDay - Day with the highest visitor count. There
        maybe multiple dates.
  \item leastBusiestDay - Day with the lowest visitor count. There
        maybe multiple dates.
  \item gateType - Gate type for which counts are provided by the user.
  \item gatecounterMaxValue - User provided value in the argument
        gatecounterMaxValue.
  \item dailyAverage - Average daily visitor count for the duration provided.
  \item dailyMedian - Median daily visitor count for the duration provided.
  \item weeklyAverage - Average weekly count for the duration provided.
  \item weeklyMedian - Median weekly count for the duration provided.
  \item monthlyAverage - Average monthly count for the duration provided.
  \item monthlyMedian - Median monthly count for the duration provided.

}
}
\description{
A function that calculates daily, weekly, monthly and cumulative
visitor counts, provided a numeric vector or a tibble containing values
of daily visitor counts and date with a specific format (see argument
details or README file).
}
\examples{
set.seed(1234)
# Example 1: Unidirectional gates with daily counts
# Simulate gate count data using Poisson distribution
randomCounts1 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                  200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

# Create a tibble with date information
randomCounts1tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts1)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts1)

# Check max value for gate counter maximum
max(randomCounts1tibble$counts, na.rm = TRUE) # 200000

# Run gateCountsToVisitorCounts function
randomCountsSumEx1 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts1tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)

randomCountsSumEx1$dailyVisitorCounts# access daily adjusted counts
randomCountsSumEx1$weeklyVisitorCounts # access weekly adjusted counts
randomCountsSumEx1$monthlyVisitorCounts # access monthly adjusted counts
randomCountsSumEx1$cumulativeVisitorCount # cumulative count for duration
randomCountsSumEx1$busiestMonth # busiest month
randomCountsSumEx1$leastBusiestMonth # least busiest month
randomCountsSumEx1$busiestWeek # busiest week
randomCountsSumEx1$leastBusiestWeek # least busiest week
randomCountsSumEx1$busiestDay # busiest day
randomCountsSumEx1$leastBusiestDay # least busiest day
randomCountsSumEx1$dailyAverage  # daily average fur duration


# Example 2: Unidirectional gates with random NA values
# Simulate gate count data using Poisson distribution
randomCounts2 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                       200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

# Randomly introduce NA and "Gate broken" entries
randomPositions <- sample(x = c(1:length(randomCounts2)),
                         size = 8, replace = FALSE)
randomCounts2[randomPositions[1:4]] <- NA
randomCounts2[randomPositions[5:8]] <- "Gate broken"

# Create a tibble with date information
randomCounts2tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts2)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts2)

# Check max value for gate counter maximum
max(as.numeric(randomCounts2tibble$counts), na.rm = TRUE) # 200000

# Run gateCountsToVisitorCounts function
randomCountsSumEx2 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts2tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)

randomCountsSumEx2$dailyVisitorCounts# access daily adjusted counts
randomCountsSumEx2$weeklyVisitorCounts # access weekly adjusted counts
randomCountsSumEx2$monthlyVisitorCounts # access monthly adjusted counts
randomCountsSumEx2$cumulativeVisitorCount # cumulative count for duration
randomCountsSumEx2$busiestMonth # busiest month
randomCountsSumEx2$leastBusiestMonth # least busiest month
randomCountsSumEx2$busiestWeek # busiest week
randomCountsSumEx2$leastBusiestWeek # least busiest week
randomCountsSumEx2$busiestDay # busiest day
randomCountsSumEx2$leastBusiestDay # least busiest day



# Example 3: Unidirectional gates with random entry errors
# Simulate gate count data using Poisson distribution
randomCounts3 <- c(sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 82, lambda = 100000)),
                       200000, # max value
                  sort(rpois(n = 50, lambda = 100)),
                  sort(rpois(n = 50, lambda = 1000)),
                  sort(rpois(n = 50, lambda = 100000)))

# Randomly introduce smaller counts
randomPositions <- sample(x = c(1:length(randomCounts3)),
                         size = 4, replace = FALSE)
randomCounts3[randomPositions] <- randomCounts3[randomPositions[1:4]] - 10

# Create a tibble with date information
randomCounts3tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts3)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts3)

# Check max value for gate counter maximum
max(as.numeric(randomCounts3tibble$counts), na.rm = TRUE) # 200000

# Run gateCountsToVisitorCounts function
randomCountsSumEx3 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts3tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 200000,
             printMessages = FALSE)

randomCountsSumEx3$dailyVisitorCounts# access daily adjusted counts
randomCountsSumEx3$weeklyVisitorCounts # access weekly adjusted counts
randomCountsSumEx3$monthlyVisitorCounts # access monthly adjusted counts
randomCountsSumEx3$cumulativeVisitorCount # cumulative count for duration
randomCountsSumEx3$busiestMonth # busiest month
randomCountsSumEx3$leastBusiestMonth # least busiest month
randomCountsSumEx3$busiestWeek # busiest week
randomCountsSumEx3$leastBusiestWeek # least busiest week
randomCountsSumEx3$busiestDay # busiest day
randomCountsSumEx3$leastBusiestDay # least busiest day



# Example 4: Bidirectional gates with NA values
# Simulate gate count data using Poisson distribution
randomCounts4 <- c(sort(rpois(n = 50, lambda = 10000)),
                  sort(rpois(n = 50, lambda = 400000)),
                  sort(rpois(n = 82, lambda = 800000)),
                  999999, # max value
                  sort(rpois(n = 50, lambda = 10000)),
                  sort(rpois(n = 50, lambda = 450000)),
                  sort(rpois(n = 50, lambda = 850000)))

# Randomly introduce NA and "Gate broken" entries
randomPositions <- sample(x = c(1:length(randomCounts4)),
                         size = 8, replace = FALSE)
randomCounts4[randomPositions[1:4]] <- NA
randomCounts4[randomPositions[5:8]] <- "Gate broken"

# Create a tibble with date information
randomCounts4tibble <- tibble::tibble(
                        dates = seq(lubridate::dmy('01-01-2022'),
                        lubridate::dmy('31-12-2022'),
                        by='1 day')[1:length(randomCounts4)] \%>\%
                        format('\%d-\%m-\%Y'),
                        counts = randomCounts4)

# Check max value for gate counter maximum
max(as.numeric(randomCounts4tibble$counts), na.rm = TRUE) # 999999

# Run gateCountsToVisitorCounts function
randomCountsSumEx4 <- gateCountsToVisitorCounts(
             rawGateCounts = randomCounts4tibble,
             gateType = "Unidirectional",
             gatecounterMaxValue = 999999,
             printMessages = FALSE)

randomCountsSumEx4$dailyVisitorCounts# access daily adjusted counts
randomCountsSumEx4$weeklyVisitorCounts # access weekly adjusted counts
randomCountsSumEx4$monthlyVisitorCounts # access monthly adjusted counts
randomCountsSumEx4$cumulativeVisitorCount # cumulative count for duration
randomCountsSumEx4$busiestMonth # busiest month
randomCountsSumEx4$leastBusiestMonth # least busiest month
randomCountsSumEx4$busiestWeek # busiest week
randomCountsSumEx4$leastBusiestWeek # least busiest week
randomCountsSumEx4$busiestDay # busiest day
randomCountsSumEx4$leastBusiestDay # least busiest day



}
\author{
Anjali Silva, \email{anjali@alumni.uoguelph.ca}
}
